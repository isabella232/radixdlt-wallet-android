apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def versionCodeNumber = 6
def versionMajor = 0
def versionMinor = 15
def versionPatch = 00

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.radixdlt.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionCodeNumber
        versionName "${versionMajor}.${versionMinor}.${String.format("%02d", versionPatch)}"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

androidExtensions {
    experimental = true
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.27.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Radix DLT client library
//    implementation 'com.radixdlt:radixdlt-java:ace3fc9'
    implementation project(':radixdlt-java')

    def androidx_version = "1.0.0"
    implementation "androidx.legacy:legacy-support-v4:$androidx_version"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:$androidx_version"
    implementation "androidx.cardview:cardview:$androidx_version"
    implementation "androidx.core:core-ktx:1.0.1"
    implementation "androidx.fragment:fragment-ktx:$androidx_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation "android.arch.persistence.room:runtime:1.1.1"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // Navigation
    def nav_version = "1.0.0-alpha07"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"
    implementation 'com.google.android.gms:play-services-vision:17.0.2'

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt "com.google.dagger:dagger-android-processor:2.16"

    // Used to format ordinal numbers in Android < Nougat
    implementation 'com.ibm.icu:icu4j:53.1'

    // Circle ImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    
    // QR generation
    implementation 'com.github.kenglxn.QRGen:android:2.5.0'

    // Duration PickerView
    implementation 'mobi.upod:time-duration-picker:1.1.3'

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation(group: 'io.reactivex.rxjava2', name: 'rxkotlin', version: '2.2.0') {
      exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
      exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    // Jake Wharton
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'

    // Vault
    implementation 'com.bottlerocketstudios:vault:1.4.2'

    //Testing
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation "io.mockk:mockk:1.8.13.kotlin13"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.3.2"

    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.12"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.2"

    // (Required) Writing tests for JUnit Jupiter
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    // (Required) The instrumentation test companion library
    androidTestImplementation "de.mannodermaus.junit5:android-instrumentation-test:0.2.2"

    // (Required) Runtime dependencies to orchestrate the execution on-device
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    androidTestRuntimeOnly "org.junit.platform:junit-platform-runner:1.3.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-instrumentation-test-runner:0.2.2"

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation('com.schibsted.spain:barista:2.7.0') {
        exclude group: 'com.android.support'
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    androidTestUtil 'androidx.test:orchestrator:1.1.1'

}
